FROM debian:jessie
MAINTAINER Edgar Garriga <edgano@gmail.com>

## 'edgano/tcoffee:trees'
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      ed \
      less \
      vim-tiny \
      wget \
      git \
      python \
      build-essential \
      cmake \
      curl \
      libargtable2-0 \
      ca-certificates \
      libpng12-0 \
      python-biopython \
      python-numpy \ 
      ruby \ 
      python-setuptools \
      default-jdk \
      valgrind \
      libpng-dev


# Install R
RUN echo "deb http://cloud.r-project.org/bin/linux/debian buster-cran40/" | tee -a /etc/apt/sources.list && \
    apt-key adv --keyserver keys.gnupg.net --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF'

#RUN apt-get update && apt-get install -y r-base-core r-recommended r-cran-nlme r-cran-lattice libblas-dev liblapack-dev gfortran
  
RUN apt-get install -y r-base r-base-dev r-cran-ape 

RUN R -e "install.packages('apTreeshape', dependencies=TRUE, repos='https://cran.rediris.es')"

#install R packages
#RUN apt-get install -y --no-install-recommends libblas-dev liblapack-dev gfortran 
#RUN R -e "install.packages('seqinr', repos='http://R-Forge.R-project.org')"

# RUN R -e "install.packages('MatrixModels', repos='http://R-Forge.R-project.org')"
# RUN R -e "install.packages('quantreg', repos='http://R-Forge.R-project.org')"
# RUN R -e "install.packages('pbapply', repos='http://R-Forge.R-project.org')"

# RUN wget https://cran.r-project.org/src/contrib/apTreeshape_1.5-0.tar.gz

#RUN R -e "install.packages('apTreeshape', dependencies='true', repos='http://R-Forge.R-project.org')"



# install argtable 2

# install CLUSTAL OMEGA

# install CLUSTALO w1

# install CLUSTAL w2

# install fasta35 (needed for mafft)

# install MAFFT

# install FAMSA
#RUN git clone https://github.com/refresh-bio/FAMSA.git && \
#  cd FAMSA && \ 
#  git checkout e2442bb34a5d5894e300bbec78c259b9cfffa8f0 && \ 
#  sed -i 's/all: famsa famsa-gpu/all: famsa/' makefile && \
#  sed -i 's/NO_AVX = false/NO_AVX = true/' makefile && \
#  sed -i 's/NO_AVX2 = false/NO_AVX2 = true/' makefile && \
#  sed -i 's/NO_GPU = false/NO_GPU = true/' makefile && \
#  make && \
#  cp famsa /bin/.

# Install TCOFFEE
#RUN git clone https://github.com/edgano/tcoffee.git tcoffee && \
#    cd tcoffee && \
#    git checkout 5b7ce93991afd74073a8ab7874c5687795208aa1 && \
#    cd t_coffee/src && \
#    make t_coffee && \
#    cp t_coffee /bin/.

ENV HOME '/'

ENV FASTA_4_MAFFT '/bin/fasta35'

ENV HOME_4_TCOFFEE '/tmp/.tcoffee/'
ENV CACHE_4_TCOFFEE '/tmp/.tcoffee/cache'
ENV LOCKDIR_4_TCOFFEE '/tmp/.tcoffee/lock'
ENV TMP_4_TCOFFEE '/tmp/.tcoffee/tmp'
ENV TRASH_4_TCOFFEE '/tmp/.tcoffee/trash'

#unset MAFFT_BINARIES
ENV MAFFT_BINARIES ''


# docker build -f Dockerfile_trees .